{"version":3,"file":"static/js/757.8aca3fdf.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/UserMenu/UserMenu.module.css?1b0e","components/UserMenu/UserMenu.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectFilter, selectContacts],\n  (filter, contacts) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport Button from '@mui/material/Button';\nimport { TextField } from '@mui/material';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport Notiflix from 'notiflix';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const prevContacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameChange = e => {\n    setName(e.target.value);\n  };\n\n  const numberChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const findContactNumber = (contacts, number) => {\n    return contacts.find(\n      contact => contact.number.replace(/[^\\d]/g, '') === number\n    );\n  };\n\n  const findContactName = (contacts, name) => {\n    return contacts.find(contact => contact.name.toLowerCase() === name);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const onlyNumber =number.replace(/[^\\d]/g, '');\n    const checkNumber = findContactNumber(prevContacts, onlyNumber);\n    const lowerName = name.toLowerCase();\n    const checkName = findContactName(prevContacts, lowerName);\n    const contact = { name, number };\n    if (!checkNumber && !checkName) {\n      dispatch(addContact(contact));\n    } else if (checkName) {\n      Notiflix.Notify.info(`${name} is already in contacts.`);\n    } else if (checkNumber) {\n      Notiflix.Notify.info(`${number} is already in contacts.`);\n    }\n    reset();\n  };\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <TextField\n        id={nameInputId}\n        label=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        size=\"small\"\n        onChange={nameChange}\n        required\n      />\n      <TextField\n        id={numberInputId}\n        label=\"Number\"\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        size=\"small\"\n        margin=\"normal\"\n        onChange={numberChange}\n        required\n      />\n      <Button variant=\"outlined\" type=\"submit\" color=\"success\">\n        Add contact\n      </Button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contact\":\"ContactList_contact__0STHS\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { nanoid } from 'nanoid';\nimport Button from '@mui/material/Button';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const handleClick = e => {\n    dispatch(deleteContact(e.target.id));\n  };\n\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <ul className={css.contactList}>\n      {filteredContacts.map(contact => {\n        return (\n          <li className={css.contact} key={nanoid()}>\n            <div>\n              {contact.name}: {contact.number}\n            </div>\n            <Button\n              variant=\"outlined\" \n              type=\"button\"\n              id={contact.id}\n              onClick={handleClick}\n              color=\"error\"\n            >\n              Delete\n            </Button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\"};","import { nanoid } from 'nanoid';\nimport { TextField } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { addFilter } from 'redux/contacts/filterSlice';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFinding = e => {\n    const inputValue = e.target.value;\n    const lowerValue = inputValue.toLowerCase();\n    dispatch(addFilter(lowerValue));\n  };\n\n  const filterInputId = nanoid();\n  return (\n    <>\n      <div className={css.filter}>\n      <label htmlFor={filterInputId}>Find contacts by name</label>\n      <TextField\n        id={filterInputId}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        size='small'\n        title=\"Find contact by name\"\n        onChange={handleFinding}\n        />\n        </div>\n    </>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"usermenu\":\"UserMenu_usermenu__vVaWR\"};","import React from 'react';\nimport Button from '@mui/material/Button';\nimport LogoutRoundedIcon from '@mui/icons-material/LogoutRounded';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\nimport { selectUser } from 'redux/auth/selectors';\nimport { useDispatch } from 'react-redux';\nimport { logOut } from 'redux/auth/operations';\nimport css from './UserMenu.module.css'\n\nconst UserMenu = () => {\n  const { email } = useSelector(selectUser);\n  const dispatch = useDispatch();\n  \n  const handleClick = e => {\n    dispatch(logOut());\n  };\n  return (\n    <div className={css.usermenu}>\n      <p>{email}</p>\n      <Button\n        variant=\"contained\"\n        size=\"small\"\n        type=\"button\"\n        onClick={handleClick}\n        endIcon={<LogoutRoundedIcon/>}\n        color=\"success\"\n      >\n        Logout\n      </Button>\n    </div>\n  );\n};\n\nexport default UserMenu;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport UserMenu from 'components/UserMenu/UserMenu';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <UserMenu />\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading ? <div>Loading...</div> : <ContactList />}\n      {error && <div>Something go wrong... Try again!</div>}\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","dispatch","useDispatch","prevContacts","useSelector","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","nameInputId","nanoid","numberInputId","_jsxs","className","css","onSubmit","e","preventDefault","onlyNumber","replace","checkNumber","find","findContactNumber","lowerName","checkName","findContactName","Notiflix","concat","addContact","children","_jsx","TextField","id","label","type","value","pattern","title","size","onChange","target","required","margin","Button","variant","color","handleClick","deleteContact","filteredContacts","map","onClick","filterInputId","_Fragment","htmlFor","lowerValue","addFilter","email","selectUser","logOut","endIcon","LogoutRoundedIcon","useEffect","fetchContacts","UserMenu","ContactForm","Filter","ContactList"],"sourceRoot":""}